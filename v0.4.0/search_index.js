var documenterSearchIndex = {"docs":
[{"location":"Integral/integralapi/#Fractional-integral-API","page":"Fractional integral API","title":"Fractional integral API","text":"","category":"section"},{"location":"Integral/integralapi/","page":"Fractional integral API","title":"Fractional integral API","text":"FractionalCalculus.jl has a disciplinary type system, by specifying which type you want to use, you can use the related algorithm to compute fractional differentiation and fractional integral. ","category":"page"},{"location":"Integral/integralapi/","page":"Fractional integral API","title":"Fractional integral API","text":"This page contains all of the existing API we can use for computing fractional integral.","category":"page"},{"location":"Integral/integralapi/#FractionalCalculus.fracint","page":"Fractional integral API","title":"FractionalCalculus.fracint","text":"fracint(f, α, point, h, FracIntAlg())\n\nThe general function used for fractional integral computing.\n\nExample\n\njulia> fracint(x->x^2, 0.5, 1, 0.001, RLInt_Approx())\n0.6017877646029814\n\nThere are many algorithms can be used to computing fractional integral, please refer to our manual for more details: manual.\n\n\n\n\n\n","category":"function"},{"location":"Integral/integralapi/#Riemann-Liouville-sense-fractional-integral","page":"Fractional integral API","title":"Riemann Liouville sense fractional integral","text":"","category":"section"},{"location":"Integral/integralapi/#FractionalCalculus.RLInt","page":"Fractional integral API","title":"FractionalCalculus.RLInt","text":"Riemann-Liouville sense fractional integral algorithms\n\nAs the general fractional order integral type, RLInt is the parent type of all Riemann Liouville sense numerical methods.\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#FractionalCalculus.RLDirect","page":"Fractional integral API","title":"FractionalCalculus.RLDirect","text":"Riemann Liouville sense direct compute\n\nfracint(f::Function, α, start_point, end_point, h, RLDirect())\n\nRiemann_Liouville fractional integral using complex step differentiation.\n\n(J^αf)(t)=frac1Gamma(α) int_0^t(t-τ)^α-1f(τ)dτ\n\nBy using QuadGK calculate the integration and obtain the value.\n\nExample:\n\njulia> fracint(x->x^5, 0.5, 0, 2.5, 1e-8, RLDirect())\n(64.36234189727955, 7.742994054849976e-7)\n\nReturns a tuple (1.1639316474512205, 1.0183453796725215e-8), which contains the value of this derivative is 1.1639316474512205, and the error estimate is 1.0183453796725215e-8\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#FractionalCalculus.RLPiecewise","page":"Fractional integral API","title":"FractionalCalculus.RLPiecewise","text":"Riemann Liouville sense fractional integral using piecewise interpolation.\n\nfracint(f, α, end_point, h, RLPiecewise())\n\nExample\n\njulia> fracint(x->x^5, 0.5, 2.5, 0.0001, RLPiecewise())\n64.36234206345209\n\nBy deploying Piecewise interpolation to approximate the original function, with small step size, this method is fast and take little memory allocation.\n\nUsing piecewise linear interpolation:\n\n    y_n(t)=fract-t_i+1t_i-t_i+1y(t_i)+fract-t_it_i+1-t_iy(t_i+1)\n\nConstitute the original function with the interpolation and implement the summation.\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#FractionalCalculus.RLIntApprox","page":"Fractional integral API","title":"FractionalCalculus.RLIntApprox","text":"Riemann Liouville sense fractional integral approximation.\n\nfracint(f, α, end_point, h, RLIntApprox())\n\nExample\n\njulia> fracint(x->x^5, 0.5, 2.5, 0.0001, RLIntApprox())\n64.36229646291393\n\nUsing the Staircase approximation to approximate the original function and implement the summation.\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#FractionalCalculus.RLLinearInterp","page":"Fractional integral API","title":"FractionalCalculus.RLLinearInterp","text":"Riemann Liouville sense fractional integral using Linear interpolation.\n\nfracint(f, α, end_point, h, RLLinearInterp())\n\nExample\n\njulia> fracint(x->x^5, 0.5, 2.5, 0.0001, RLLinearInterp())\n64.36234206434942\n\nRLLinearInterp is more complex compared with RLIntApprox but more precise.\n\nDeploying the Linear Interpolation between f_j+1 and f_j, RLLinearInterp method is more precise than RLIntApprox.\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#FractionalCalculus.RLIntMatrix","page":"Fractional integral API","title":"FractionalCalculus.RLIntMatrix","text":"Riemann Liouville sense integral using Triangular Strip Matrix to discrete.\n\nfracint(f, α, end_point, h, RLIntMatrix())\n\nUsing Triangular Strip Matrix to approximate fractional integral.\n\nExample\n\njulia> fracint(x->x^5, 0.5, 2.5, 0.0001, RLIntMatrix())\n\ninfo: Info\nTriangular Strip Matrix method returns the derivative in the interval 0 T in Vector\n\ntip: Tip\nWith the advancing Triangular Strip Matrix method, you can not only compute fractional integrals, integer order, higher order integral is also supported!!\n\nTry to set α as an integer, arbitrary integer of course! I promise you would enjoy it😏\n\nUsing Triangular Strip Matrix to discrete the integral.\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#FractionalCalculus.RLIntSimpson","page":"Fractional integral API","title":"FractionalCalculus.RLIntSimpson","text":"Riemann Liouville sense fractional integral using fractional Simpson's formula to approximate.\n\nExample\n\njulia> fracint(x->x, 0.5, 1, 0.000001, RLIntSimpson())\n0.7516516520541335\n\n@inproceedings{Li2015NumericalMF,\n  title={Numerical Methods for Fractional Calculus},\n  author={Changpin Li and Fanhai Zeng},\n  year={2015}\n}\n\nUsing fractional Simpson's formula to discrete fractional integral.\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#FractionalCalculus.RLIntTrapezoidal","page":"Fractional integral API","title":"FractionalCalculus.RLIntTrapezoidal","text":"Riemann Liouville sense fractional integral using fractional trapezoidal formula to approximate.\n\nExample\n\njulia> fracint(x->x, 0.5, 1, 0.001, RLIntTrapezoidal())\n0.7522527780636226\n\n《Numerical methods for fractional calculus》. Using Trapezoidal method to approximate fractional integral\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#FractionalCalculus.RLIntRectangular","page":"Fractional integral API","title":"FractionalCalculus.RLIntRectangular","text":"Riemann Liouville sense fractional integral using fractional rectangular formula to approximate.\n\nExample\n\njulia> fracint(x->x, 0.5, 1, 0.001, RLIntRectangular())\n0.7516812175993778\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#FractionalCalculus.RLIntCubicSplineInterp","page":"Fractional integral API","title":"FractionalCalculus.RLIntCubicSplineInterp","text":"Riemann Liouville sense fractional integral using cubic spline interpolation to approximate.\n\nExample\n\njulia> fracint(x->x, 0.5, 1, 0.0001, RLIntCubicSplineInterp())\n0.7529119186452693\n\nError estimate of this method is mathcalO(h^4), it is determined by the error of the cubic spline interpolation.\n\nwarning: Set h as 0.001 or bigger\nFor some reason, in the RLIntCubicSplineInterp method, set h as 0.001 would get better result.\n\nNumerical Methods for Fractional Calculus Page 34\n\n\n\n\n\n","category":"type"},{"location":"Integral/integralapi/#Hadamard-sense-fractional-integral","page":"Fractional integral API","title":"Hadamard sense fractional integral","text":"","category":"section"},{"location":"Integral/integralapi/","page":"Fractional integral API","title":"Fractional integral API","text":"FractionalCalculus.HadamardMat","category":"page"},{"location":"Integral/integralapi/#FractionalCalculus.@fracint","page":"Fractional integral API","title":"FractionalCalculus.@fracint","text":"@fracint(f, α, point)\n\nReturn the α-order integral of f at specific point.\n\njulia> @fracint(x->x, 0.5, 1)\n0.7522525439593486\n\n\n\n\n\n","category":"macro"},{"location":"Integral/integralapi/#FractionalCalculus.@semifracint","page":"Fractional integral API","title":"FractionalCalculus.@semifracint","text":"@semifracint(f, point)\n\nReturn the semi-integral of f at specific point.\n\njulia> @semifracint(x->x, 1)\n0.7522525439593486\n\n\n\n\n\n","category":"macro"},{"location":"Integral/integralapi/#Symbolic-fractional-integral","page":"Fractional integral API","title":"Symbolic fractional integral","text":"","category":"section"},{"location":"Integral/integralapi/#FractionalCalculus.semiint","page":"Fractional integral API","title":"FractionalCalculus.semiint","text":"Symbolic fractional integral\n\nsemiint(fun)\n\nsemiint uses SymbolicUtils.jl and Symbolics.jl to compute symbolic fractional integral.\n\nExample\n\njulia> using SymbolicUtils\njulia> @syms x\njulia> semiint(x^4)\n0.45851597901024005(x^4.5)\n\n\n\n\n\n","category":"function"},{"location":"comparison/#Comparison-with-other-tools","page":"Comparison","title":"Comparison with other tools","text":"","category":"section"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"Here we compare the current tools can be used to computing fractional calculus with FractionalCalculus.jl.","category":"page"},{"location":"comparison/#Matlab","page":"Comparison","title":"Matlab","text":"","category":"section"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"While most packages are encoded in Matlab, we would elaborate more on this section","category":"page"},{"location":"comparison/#Matrix-Discretization","page":"Comparison","title":"Matrix Discretization","text":"","category":"section"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"The Matrix Discretization method is a Matlab toolbox developed by Professor Igor Podlubny. FractionalCalculus.jl also support this method, the relating API is RLDiff_Matrix and RLInt_Matrix.","category":"page"},{"location":"comparison/#FOTF","page":"Comparison","title":"FOTF","text":"","category":"section"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"FOTF is a Matlab toolbox developed by Professor Dingyu Xue, it can be used to modeling and analysis fractional order systems. FOTF contains various methods to compute fractional calculus, FractionalCalculus.jl adapted all the methods in this toolbox, the relating methods are:","category":"page"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"GL_High_Precision and Caputo_High_Precision.","category":"page"},{"location":"comparison/#Chebfun","page":"Comparison","title":"Chebfun","text":"","category":"section"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"It is noteworthy that Chebfun also can be used to compute fractional calculus.","category":"page"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"Detailed usage","category":"page"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"There are only one algorithm in Chebfun regarding Riemann Liouville fractional derivative and integral.","category":"page"},{"location":"comparison/#Python","page":"Comparison","title":"Python","text":"","category":"section"},{"location":"comparison/#fcpy","page":"Comparison","title":"fcpy","text":"","category":"section"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"fcpy is a Python package for computing fractional calculus built by SciFracX community. It is based on FractionalCalculus.jl","category":"page"},{"location":"comparison/#mpmath","page":"Comparison","title":"mpmath","text":"","category":"section"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"mpmath mpmath is a python library for arbitrary-precision floating-point arithmetic computing, it is noteworthy that mpmath also support fractional calculus computing.","category":"page"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"The relating document is here: differint","category":"page"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"Mpmath only support Riemann Liouville fractional derivative.","category":"page"},{"location":"comparison/#differint","page":"Comparison","title":"differint","text":"","category":"section"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"differint is a Python package for calculating fractional derivatives, the main algorithms are Riemann Liouville(RL), Grunwald Letnikov(GL) and  improved Grunwald Letnikov(GLI) algorithms.","category":"page"},{"location":"comparison/#R","page":"Comparison","title":"R","text":"","category":"section"},{"location":"comparison/","page":"Comparison","title":"Comparison","text":"Didn't see any packages used to compute fractional calculus😟","category":"page"},{"location":"Derivative/derivative/#Fractional-derivative","page":"Fractional derivative","title":"Fractional derivative","text":"","category":"section"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"Pages = [\"derivative.md\"]","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"To get started with fractional derivatives, you need to know that unlike Newtonian derivatives, fractional derivative is defined via integral.","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"tip: Non-Local Operators\nIt is noteworthy that the fractional derivatives are not local operators, which means that we cannot calculate the fractional derivative solely on the basis of function values of f(x) taken from neighborhood of the point x. Instead, we have to take the entire history of f(x) (i.e., all function values f(x) for 0xa) into account.","category":"page"},{"location":"Derivative/derivative/#Riemann-Liouville-sense-derivative","page":"Fractional derivative","title":"Riemann Liouville sense derivative","text":"","category":"section"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"Riemann Liouville sense derivative is built upon the Riemann Liouville sense integral.","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"_aD^alpha_tf(t)=fracd^ndt^n _aD^-(n-alpha)_tf(t)=fracd^ndt^n _aI^n-alpha_tf(t)","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"_tD^alpha_bf(t)=fracd^ndt^n _tD^-(n-alpha)_bf(t)=fracd^ndt^n _tI^n-alpha_bf(t)","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"We can use FractionalCalculus.jl to compute Riemann Liouville sense 05 order fractional derivative of f(x)=x at x=1 with step size 00001:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"julia> fracdiff(x->x, 0.5, 1, 0.0001, RLDiffL1())\n1.1283791670955168","category":"page"},{"location":"Derivative/derivative/#Caputo-sense-derivative","page":"Fractional derivative","title":"Caputo sense derivative","text":"","category":"section"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"There are many types of definitions of fractional derivatives, Caputo is one of these useful definitions. The Caputo fractional derivative is first proposed in Michele Caputo's Paper, ","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"^CD_t^alpha f(t) = frac1Gamma(n-alpha)int_0^tfracf^(n)(tau)dtau(t-tau)^alpha+1-n n=lceilalpharceil","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"In FractionalCalculus.jl, let's see, if you want to calculate the 05 order fractional derivative of f(x)=x at a x=1 with step size 00001, simply type these:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"julia>fracdiff(x->x, 0.5, 1, 0.0001, CaputoTrap())\n1.128379167055761","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"We can see the result is closely resembling with the result in Riemann Liouville sense.","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"info: Info\nThe Riemann Liouville sense derivative and Caputo sense derivative have the following relationship:_RLD^alpha_a tf(t)=_CD^alpha_a tf(t)+sum_k=0^m-1fracf^(k)(a)(t-a)^k-aGamma(k+1-alpha)Here m-1alpham, f^(m) is integrable on a t.","category":"page"},{"location":"Derivative/derivative/#Grünwald-Letnikov-sense-derivative","page":"Fractional derivative","title":"Grünwald Letnikov sense derivative","text":"","category":"section"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"D^alpha f(t)=displaystyle lim_hrightarrow0frac1h^alphasum_0leq mltinfty(-1)^m alphachoosemf(t+(alpha-m)h)","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"To compute the Grünwald Letnikov sense derivative, you can use FractionalCalculus.jl by:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"julia> fracdiff(x->x, 0.5, collect(0:0.01:1), 2, GLHighPrecision())\n101-element Vector{Float64}:\n 0.0\n 0.11283791670955126\n 0.15957691216057307\n 0.19544100476116796\n 0.22567583341910252\n 0.252313252202016\n 0.27639531957706837\n 0.29854106607209235\n 0.31915382432114614\n ⋮\n 1.082303275961202\n 1.0881694613449238\n 1.094004191971426\n 1.0998079684646789\n 1.1055812783082735\n 1.111324596323283\n 1.1170383851240115\n 1.1227230955528664\n 1.1283791670955126","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"Here, we use the high-precision algorithm, the fourth parameter means we set the precision order as p=2. The returned result means the derivative on the interval 0 1.","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"info: Info\nIf the function f(t) is suitably smooth, then the Grünwald Letnikov sense derivative and the Riemann Liouville sense derivative are equivalent.","category":"page"},{"location":"Derivative/derivative/#Riesz-sense-derivative","page":"Fractional derivative","title":"Riesz sense derivative","text":"","category":"section"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"The Riesz sense symmetric fractional derivative is defined by Caputo derivative:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"\nfracd^beta phi(x)dx^mu=D_R^betaphi(x)=frac12Bigl(_aD_x^betaphi(x)+_xD_b^betaphi(x)\n Bigr)\n","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"In FractionalCalculus.jl, we can use the RieszSymmetric algorithm to compute the fractional derivative:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"julia> fracdiff(x->x, 0.5, 1, 0.01, RieszSymmetric())","category":"page"},{"location":"Derivative/derivative/#Hadamard-sense-derivative","page":"Fractional derivative","title":"Hadamard sense derivative","text":"","category":"section"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"The Hadamard sense derivative is defined using Hadamard sense integral:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"\n_HD_a+^-alphaf(x)=frac1Gamma(alpha)int_a^x(logfracxt)^-(1-alpha)f(t)fracdtt x  a\n","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"So we can know the Hadamard sense fractional derivative:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"\n_HD_a+^alphaf(x)=delta^n_HD_a+^-(n-alpha)f(x) xa\n","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"\ndelta=xfracddx n-1leqalphaninmathrmZ^+\n","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"To compute Hadamard fractional derivative, we can use the Hadamard relating algorithms in FractionalCalculus.jl:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"julia> fracdiff(x->x, 0.5, 0, 1, 0.01, HadamardLRect())\n0.9165222777761635","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"note: Non-singular kernel\nWhen we are using the \"fractional derivative\" with non-singular kernel, like Caputo-Fabrizio and Atangana-Baleanu-Caputo sense, we should know these operators are in fact integer order operators, for more details we recommend you to read the paper Why Fractional Derivatives with Nonsingular Kernels Should Not Be Used","category":"page"},{"location":"Derivative/derivative/#Caputo-Fabrizio-sense-derivative","page":"Fractional derivative","title":"Caputo-Fabrizio sense derivative","text":"","category":"section"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"Caputo-Fabrizio sense fractional order derivative is defined by:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"^CF_0D^alpha_t u(t)=fracM(alpha)1-alphaint^t_0fracddtauu(tau)exp-fracalpha1-alpha(t-tau)dtau\n\nM(alpha)=1-alpha+alphaGamma(alpha)","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"To compute the Caputo-Fabrizio sense derivative, we can use the CaputoFabrizioAS algorithm in FractionalCalculus.jl:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"julia> fracdiff(x->x, 0.5, 1, 0.01, CaputoFabrizioAS())\n0.9887564512257243","category":"page"},{"location":"Derivative/derivative/#Atangana-Baleanu-sense-derivative","page":"Fractional derivative","title":"Atangana-Baleanu sense derivative","text":"","category":"section"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"Atangana-Baleanu sense fractional order derivative is defined by:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"^ABC_0D^alpha_t f(t)=fracAB(alpha)1-alphaint^t_0fracddtauf(tau)E_alpha-fracalpha1-alpha(t-tau)^alphadtau\n\nAB(alpha)=1-alpha+alphaGamma(alpha)","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"To compute the Atangana-Baleanu sense derivative, we can use the AtanganaSeda algorithm in FractionalCalculus.jl:","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"julia> fracdiff(x->x, 0.5, 1, 0.01, AtanganaSeda())\n-0.8696378200415389","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"note: Note\nHere we need to specify the start point and end point","category":"page"},{"location":"Derivative/derivative/","page":"Fractional derivative","title":"Fractional derivative","text":"There are different approximating methods being used in computing, choose the one you need😉","category":"page"},{"location":"Derivative/derivativeapi/#Fractional-derivative-API","page":"Fractional derivative API","title":"Fractional derivative API","text":"","category":"section"},{"location":"Derivative/derivativeapi/","page":"Fractional derivative API","title":"Fractional derivative API","text":"FractionalCalculus.jl has a disciplinary type system, by specifying which type you want to use, you can use the related algorithm to compute fractional differentiation and fractional integral. ","category":"page"},{"location":"Derivative/derivativeapi/","page":"Fractional derivative API","title":"Fractional derivative API","text":"This page contains all of the existing APIs we can use for computing fractional derivatives.","category":"page"},{"location":"Derivative/derivativeapi/#FractionalCalculus.fracdiff","page":"Fractional derivative API","title":"FractionalCalculus.fracdiff","text":"fracdiff(f, α, point, h, FracDiffAlg())\n\nfracdiff is the general function for computing fractional derivative.\n\nExample\n\njulia> fracdiff(x->x^2, 0.5, 1, 0.001, RLDiffL1())\n1.5044908143658473\n\nThere are many algorithms can be used to computing fractional derivative, please refer to our manual for more details: http://scifracx.org/FractionalCalculus.jl/dev/Derivative/derivativeapi/.\n\n\n\n\n\n","category":"function"},{"location":"Derivative/derivativeapi/#Caputo-Sense-fractional-derivative","page":"Fractional derivative API","title":"Caputo Sense fractional derivative","text":"","category":"section"},{"location":"Derivative/derivativeapi/#FractionalCalculus.CaputoDirect","page":"Fractional derivative API","title":"FractionalCalculus.CaputoDirect","text":"Caputo sense fractional derivative.\n\nfracdiff(f::Function, α, start_point, end_point, step_size, ::Caputo)\n\nExample:\n\njulia> fracdiff(x->x^5, 0.5, 0, 2.5, 0.0001, CaputoDirect())\n\nReturns a tuple (result, error), which means the value of this derivative is 141.59714979764541, and the error estimate is 1.1532243848672914e-6.\n\nRefer to Caputo derivative\n\nnote: Note\nCaputo Direct algorithms belong to direct computing, precise are ensured, but maybe cause more memory allocation and take more compilation time.\n\nUsing the direct mathematic expression:\n\n^CD_t^α=frac1Gamma(n-α)int_0^tfracf^(n)(τ)(t-τ)^α+1-n\n\nAs for the derivative inside the integral, we use the Complex Step Differentiation to obtain a more accurate value.\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.CaputoTrap","page":"Fractional derivative API","title":"FractionalCalculus.CaputoTrap","text":"Caputo sense Piecewise algorithm\n\nfracdiff(f, α, end_point, h, CaputoTrap())\n\nUsing piecewise linear interpolation function to approximate input function and combining Caputo derivative then implement summation.\n\nExample\n\njulia> fracdiff(x->x^5, 0.5, 2.5, 0.001, CaputoTrap())\n\nReturn the fractional derivative of f(x)=x^5 at point x=25.\n\n@article{LI20113352,\ntitle = {Numerical approaches to fractional calculus and fractional ordinary differential equation},\nauthor = {Changpin Li and An Chen and Junjie Ye},\n}\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.CaputoDiethelm","page":"Fractional derivative API","title":"FractionalCalculus.CaputoDiethelm","text":"Caputo sense Diethelm computation\n\nfracdiff(f, α, end_point, h, CaputoDiethelm())\n\nUsing quadrature weights(derived from product trapezoidal rule) to approximate the derivative.\n\nExample\n\njulia> fracdiff(x->x, 0.5, 1, 0.007, CaputoDiethelm())\n1.128378318687192\n\ninfo: Scope\n0 < α < 1\n\nDiethelm's method for computingn Caputo sense fractional derivative using product trapezoidal rule and Richardsin extrapolation\n\n@article{10.1093/imanum/17.3.479,\nauthor = {DIETTELM, KAI},\ntitle = \"{Generalized compound quadrature formulae for finite-part integrals}\",\njournal = {IMA Journal of Numerical Analysis},\ndoi = {10.1093/imanum/17.3.479},\n}\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.CaputoHighPrecision","page":"Fractional derivative API","title":"FractionalCalculus.CaputoHighPrecision","text":"Caputo sense fractioal derivative with p-th order precision.\n\nfracdiff(f, α, t, p, CaputoHighPrecision())\n\nUse the high precision algorithm to compute the Caputo sense fractional derivative.\n\nThe p here is the grade of precision.\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.CaputoHighOrder","page":"Fractional derivative API","title":"FractionalCalculus.CaputoHighOrder","text":"Caputo sense fractional derivative high order approximation.\n\ninfo: Info\nBy using CaputoHighOrder method, we can set 0alpha2\n\nExample\n\njulia> fracdiff(x->x, 0.5, 1, 0.01, 2, CaputoHighOrder())\n1.1283791670955123\n\n@article{Li2017HighOrderAT,\n  title={High-Order Approximation to Caputo Derivatives and Caputo-type Advection–Diffusion Equations: Revisited},\n  author={Changpin Li and Minhao Cai},\n  journal={Numerical Functional Analysis and Optimization},\n  year={2017},\n  volume={38},\n  pages={861 - 890}\n}\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.CaputoL1","page":"Fractional derivative API","title":"FractionalCalculus.CaputoL1","text":"L1 method used only for the case when the order is 0 ≤ α ≤ 1\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.CaputoL2","page":"Fractional derivative API","title":"FractionalCalculus.CaputoL2","text":"L2 method used only for the case when the order is 1 ≤ α ≤ 2\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#Grunwald-Letnikov-sense-fractional-derivative","page":"Fractional derivative API","title":"Grunwald Letnikov sense fractional derivative","text":"","category":"section"},{"location":"Derivative/derivativeapi/#FractionalCalculus.GLDirect","page":"Fractional derivative API","title":"FractionalCalculus.GLDirect","text":"Grünwald–Letnikov sense fractional dervivative.\n\nfracdiff(f, α, start_point, end_point, GLDirect())\n\nExample:\n\njulia> fracdiff(x->x^5, 0, 0.5, GLDirect())\n\ninfo: Scope\nPlease note Grunwald-Letnikov sense fracdiff only support 0  alpha  1.\n\nPlease refer to Grünwald–Letnikov derivative for more details.\n\nGrunwald Letnikov direct compute method to obtain fractional derivative, precision are guaranteed but cause more memory allocation and compilation time.\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.GLFiniteDifference","page":"Fractional derivative API","title":"FractionalCalculus.GLFiniteDifference","text":"Grünwald Letnikov sense finite difference approximation\n\nfracdiff(f::Union{Function, Number}, α::AbstractArray, end_point, h, ::GLFiniteDifference)::Vector\n\nUse finite difference method to obtain Grünwald Letnikov sense fractional derivative.\n\nExample\n\njulia> fracdiff(x->x, 0.5, 1, 0.01, GLFiniteDifference())\n1.1269695801851276\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.GLMultiplicativeAdditive","page":"Fractional derivative API","title":"FractionalCalculus.GLMultiplicativeAdditive","text":"Grünwald Letnikov sense Multiplicative and Addtive approximation\n\nfracdiff(f, α, end_point, h, GLMultiplicativeAdditive())\n\nGrünwald–Letnikov multiplication-addition-multiplication-addition··· method to approximate fractional derivative.\n\nExample\n\njulia> fracdiff(x->x, 0.5, 1, 0.007, GLMultiplicativeAdditive())\n1.127403405642918\n\n@book{oldham_spanier_1984,\ntitle={The fractional calculus: Theory and applications of differentiation and integration to arbitrary order},\nauthor={Oldham, Keith B. and Spanier, Jerome},\nyear={1984}} \n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.GLLagrangeThreePointInterp","page":"Fractional derivative API","title":"FractionalCalculus.GLLagrangeThreePointInterp","text":"Grünwald Letnikov sense three point interpolation\n\nfracdiff(f, α, end_point, h, GLLagrangeThreePointInterp())\n\nUsing Lagrange three poitns interpolation to approximate the fractional derivative.\n\nExample\n\njulia> fracdiff(x->x, 0.5, 1, 0.006, GLLagrangeThreePointInterp())\n1.1261297605404632\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#Riemann-Liouville-sense-fractional-derivative","page":"Fractional derivative API","title":"Riemann Liouville sense fractional derivative","text":"","category":"section"},{"location":"Derivative/derivativeapi/#FractionalCalculus.RLDiffL1","page":"Fractional derivative API","title":"FractionalCalculus.RLDiffL1","text":"Riemann Liouville sense derivative approximation\n\nfracdiff(f, α, end_point, h, RLDiffL1())\n\nUsing the L1 algorithm Linear interpolation to approximate fractional derivative in Riemann Liouville  fractional derivative sense.\n\nExample\n\njulia> fracdiff(x->x^5, 0.5, 2.5, 0.0001, RLDiffL1())\n141.59707906952633\n\nwarning: Warning\nThe RLDiffL1 algorithm only support for 0 < α < 1.\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.RLDiffMatrix","page":"Fractional derivative API","title":"FractionalCalculus.RLDiffMatrix","text":"Riemann Liouville sense derivative using Triangular Strip Matrix to discrete and compute.\n\nfracdiff(f, α, end_point, h, RLDiffMatrix())\n\nUsing Triangular Strip Matrix to approximate fractional derivative.\n\nExample\n\njulia> fracdiff(x->x^5, 0.5, 2.5, 0.0001, RLInt_Matrix())\n\ninfo: Info\nTriangular Strip Matrix method returns the derivative in the interval 0 T in Vector\n\n@article{2009,\ntitle={Matrix approach to discrete fractional calculus II: Partial fractional differential equations},\nDOI={10.1016/j.jcp.2009.01.014},\nauthor={Podlubny, Igor and Chechkin, Aleksei and Skovranek, Tomas and Chen, YangQuan and Vinagre Jara, Blas M.},\n}\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.RLLinearSplineInterp","page":"Fractional derivative API","title":"FractionalCalculus.RLLinearSplineInterp","text":"Riemann Liouville sense linear spline interpolation.\n\nfracdiff(f, α, end_point, h, RLLinearSplineInterp())\n\nUsing linear spline interpolation method to approximate the Riemann Liouville fractional derivative.\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.RLG1","page":"Fractional derivative API","title":"FractionalCalculus.RLG1","text":"Riemann Liouville sense G1 scheme\n\nfracdiff(f, α, start_point, end_point, h, RLG1())\n\nRemove the limit symbol in the definition of Grunwald-Letnikov fractional derivative, thereby leading to a discretization scheme in form of truncated series.\n\ntip: Tip\n**RLG1** also can be used to compute fractional integral~\n``+\\alpha`` for fractional derivative and ``-\\alpha`` for fractional integral.\n\n@inproceedings{Guo2015FractionalPD,\n  title={Fractional Partial Differential Equations and their Numerical Solutions},\n  author={Boling Guo and Xueke Pu and Feng-Hui Huang},\n  year={2015}\n}\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.RLD","page":"Fractional derivative API","title":"FractionalCalculus.RLD","text":"Riemann Liouville sense D scheme\n\n    fracdiff(f, α, point, h, RLD())\n\n@inproceedings{Guo2015FractionalPD,\n  title={Fractional Partial Differential Equations and their Numerical Solutions},\n  author={Boling Guo and Xueke Pu and Feng-Hui Huang},\n  year={2015}\n}\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.RLDiffL2","page":"Fractional derivative API","title":"FractionalCalculus.RLDiffL2","text":"RLDiffL2\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.RLDiffL2C","page":"Fractional derivative API","title":"FractionalCalculus.RLDiffL2C","text":"RLDiffL2C\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#Hadamard-sense-fractional-derivative","page":"Fractional derivative API","title":"Hadamard sense fractional derivative","text":"","category":"section"},{"location":"Derivative/derivativeapi/#FractionalCalculus.HadamardLRect","page":"Fractional derivative API","title":"FractionalCalculus.HadamardLRect","text":"Hadamard sense left rectangular approximating algorithm\n\nfracdiff(f, α, a, x, h, HadamardLRect())\n\nUsing finite part integral of left rectangular formula to compute the fractional hadamard derivative.\n\nExample\n\njulia> fracdiff(x->x, 0.5, 0, 1, 0.001, HadamardLRect())\n0.9738507879228357\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.HadamardRRect","page":"Fractional derivative API","title":"FractionalCalculus.HadamardRRect","text":"Hadamard sense right rectangular approximating algorithm\n\nfracdiff(f, α, a, x, h, HadamardTrap())\n\nUsing finite part integral of right rectangular formula to compute the fractional hadamard derivative.\n\nExample\n\njulia> fracdiff(x->x, 0.5, 0, 1, 0.001, HadamardRRect())\n0.9738507879228337\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.HadamardTrap","page":"Fractional derivative API","title":"FractionalCalculus.HadamardTrap","text":"Hadamard sense trapezoidal approximating algorithm\n\nfracdiff(f, α, a, x, h, HadamardTrap())\n\nUsing finite part integral of trapezoidal formula to compute the fractional hadamard derivative.\n\nExample\n\njulia> fracdiff(x->x, 0.5, 0, 1, 0.001, HadamardTrap())\n0.9738507879228328\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#Riesz-sense-fractional-derivative","page":"Fractional derivative API","title":"Riesz sense fractional derivative","text":"","category":"section"},{"location":"Derivative/derivativeapi/#FractionalCalculus.RieszSymmetric","page":"Fractional derivative API","title":"FractionalCalculus.RieszSymmetric","text":"Riesz sense symmetric fractional derivative algorithm.\n\nfracdiff(f, α, end_point, h, RieszSymmetric())\n\nCompute fractional derivative of Riesz sense using Triangular Strip Matrix algorithm.\n\nExample\n\njulia> fracdiff(x->x, 0.5, 1, 0.01, RieszSymmetric())\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.RieszOrtigueira","page":"Fractional derivative API","title":"FractionalCalculus.RieszOrtigueira","text":"Riesz sense Ortigueira definition fractional derivative\n\nfracdiff(f, α, end_point, h, RieszOrtigueira())\n\nOrtigueira's definition of the symmetric Riesz derivative via centred differences\n\nUsage\n\njulia> fracdiff(x->x, 0.5, 1, 0.01, RieszOrtigueira())\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#Atangana-Baleanu-sense-fractional-derivative","page":"Fractional derivative API","title":"Atangana Baleanu sense fractional derivative","text":"","category":"section"},{"location":"Derivative/derivativeapi/#FractionalCalculus.AtanganaSeda","page":"Fractional derivative API","title":"FractionalCalculus.AtanganaSeda","text":"Atangana Baleanu sense fractional derivative computing using AtanganaSeda(Newton Polynomial) method.\n\nfracdiff(f::Function, α, start_point, end_point, step_size, ::AtanganaSeda)\n\nExample:\n\njulia> fracdiff(x->x^5, 0.5, 2.5, 0.0001, AtanganaSeda())\n-91.4589645808849\n\nReference\n\nFractional Stochastic Differential Equations\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#Caputo-Fabrizio-sense-fractional-derivative","page":"Fractional derivative API","title":"Caputo Fabrizio sense fractional derivative","text":"","category":"section"},{"location":"Derivative/derivativeapi/#FractionalCalculus.CaputoFabrizioAS","page":"Fractional derivative API","title":"FractionalCalculus.CaputoFabrizioAS","text":"Atangana Seda algorithm for approximating Caputo-Fabrizio fractional Derivatives\n\nfracdiff(f, α, point, h, CaputoFabrizioAS())\n\nExample\n\njulia> fracdiff(x->x, 0.5, 1, 0.001, CaputoFabrizioAS())\n0.9893315392351845\n\nReference\n\nFractional Stochastic Differential Equations\n\n\n\n\n\n","category":"type"},{"location":"Derivative/derivativeapi/#FractionalCalculus.@fracdiff","page":"Fractional derivative API","title":"FractionalCalculus.@fracdiff","text":"@fracdiff(f, α, point)\n\nReturn the α-order derivative of f at specific point.\n\njulia> @fracdiff(x->x, 0.5, 1)\n1.1283791670955188\n\n\n\n\n\n","category":"macro"},{"location":"Derivative/derivativeapi/#FractionalCalculus.@semifracdiff","page":"Fractional derivative API","title":"FractionalCalculus.@semifracdiff","text":"@semifracdiff(f, point)\n\nReturn the semi-derivative of f at spedific point.\n\njulia> @semifracdiff(x->x, 1)\n1.1283791670955188\n\n\n\n\n\n","category":"macro"},{"location":"Derivative/derivativeapi/#Symbolic-fractional-differentiation","page":"Fractional derivative API","title":"Symbolic fractional differentiation","text":"","category":"section"},{"location":"Derivative/derivativeapi/#FractionalCalculus.semidiff","page":"Fractional derivative API","title":"FractionalCalculus.semidiff","text":"Symbolic fractional differentiation\n\nsemidiff(fun)\n\nsemidiff uses SymbolicUtils.jl and Symbolics.jl to compute symbolic fractional differentiation.\n\nExample\n\njulia> using SymbolicUtils\njulia> @syms x\njulia> semidiff(log(x))\nlog(4x) / sqrt(πx)\n\n\n\n\n\n","category":"function"},{"location":"Example/integral/#Integral-Example","page":"Integral Example","title":"Integral Example","text":"","category":"section"},{"location":"Example/integral/","page":"Integral Example","title":"Integral Example","text":"Let's see how easy it is to compute the fractional integral of a function🕺","category":"page"},{"location":"Example/integral/","page":"Integral Example","title":"Integral Example","text":"using FractionalCalculus\nusing Plots\n\ntspan = collect(0:0.01:3)\n\nexampleintegral = []\n\nfor i in range(0.1, 0.9, step=0.1)\n    push!(exampleintegral, fracint(x->x, i, tspan, 0.001, RLInt_Approx()))\nend\n\nplot(tspan, exampleintegral, title=\"Different order of integral\", linewidth=1, label=[\"α=0.1\" \"α=0.2\" \"α=0.3\" \"α=0.4\" \"α=0.5\" \"α=0.6\" \"α=0.7\" \"α=0.8\" \"α=0.9\" \"α=1\"], legend=:bottomright)","category":"page"},{"location":"Example/integral/","page":"Integral Example","title":"Integral Example","text":"Here, we use Plots.jl to generate the computing result:","category":"page"},{"location":"Example/integral/","page":"Integral Example","title":"Integral Example","text":"(Image: Integral example)","category":"page"},{"location":"Example/derivative/#Derivative-Example","page":"Derivative Example","title":"Derivative Example","text":"","category":"section"},{"location":"Example/derivative/","page":"Derivative Example","title":"Derivative Example","text":"Let's see how easy it is to compute the fractional derivative of a function🥳","category":"page"},{"location":"Example/derivative/","page":"Derivative Example","title":"Derivative Example","text":"using FractionalCalculus, Plots\ntspan=collect(0:0.01:15)\nexamplederivative = []\nfor i in range(0.1, 0.9, step=0.1)\n    push!(examplederivative, fracdiff(sin, i, tspan, 0.001, RLDiff_Approx()))\nend\nplot(tspan, examplederivative, title=\"Different order of derivative\", linewidth=3, label=[\"α=0.1\" \"α=0.2\" \"α=0.3\" \"α=0.4\" \"α=0.5\" \"α=0.6\" \"α=0.7\" \"α=0.8\" \"α=0.9\" \"α=1\"], legend=:bottomright)","category":"page"},{"location":"Example/derivative/","page":"Derivative Example","title":"Derivative Example","text":"Here, we use Plots.jl to generate the computing result:","category":"page"},{"location":"Example/derivative/","page":"Derivative Example","title":"Derivative Example","text":"(Image: Sin fractional Derivative)","category":"page"},{"location":"Example/derivative/","page":"Derivative Example","title":"Derivative Example","text":"Or different order derivative of f(x)=cos(x):","category":"page"},{"location":"Example/derivative/","page":"Derivative Example","title":"Derivative Example","text":"using FractionalCalculus, Plots\ntspan=collect(0:0.01:15)\nexamplederivative = []\nfor i in range(0.1, 0.9, step=0.1)\n    push!(examplederivative, fracdiff(cos, i, tspan, 0.001, CaputoDiethelm()))\nend\nplot(tspan, examplederivative, title=\"Different order of derivative\", linewidth=3, label=[\"α=0.1\" \"α=0.2\" \"α=0.3\" \"α=0.4\" \"α=0.5\" \"α=0.6\" \"α=0.7\" \"α=0.8\" \"α=0.9\" \"α=1\"], legend=:bottomright)","category":"page"},{"location":"Example/derivative/","page":"Derivative Example","title":"Derivative Example","text":"(Image: Cos fractional Derivative)","category":"page"},{"location":"Example/derivative/","page":"Derivative Example","title":"Derivative Example","text":"Also want to see different order derivative of a function? No problem!!","category":"page"},{"location":"Example/derivative/","page":"Derivative Example","title":"Derivative Example","text":"(Image: Different Order)","category":"page"},{"location":"Derivative/arbitrary_order_derivative/#Arbitrary-Order-Fractional-Derivative","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"","category":"section"},{"location":"Derivative/arbitrary_order_derivative/","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"While most of the algorithms only support for limit scope, we also provide arbitrary order fractional derivative, thanks to the outstanding work of Prof Igor Podlubny for Triangular Strip Matrices.","category":"page"},{"location":"Derivative/arbitrary_order_derivative/","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"In FractionalCalculus.jl, you can compute arbitrary fractional derivative using the specific algorithm RLDiff_Matrix:","category":"page"},{"location":"Derivative/arbitrary_order_derivative/","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"julia> fracdiff(f, α, end_point, h, RLDiff_Matrix())","category":"page"},{"location":"Derivative/arbitrary_order_derivative/","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"For example, we want to calculate the 36 order fractional deriavtive of f(x)=x^5 in interval 0 6:","category":"page"},{"location":"Derivative/arbitrary_order_derivative/","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"julia> fracdiff(x->x^5, 3.6, 1, 0.001, RLDiff_Matrix())","category":"page"},{"location":"Derivative/arbitrary_order_derivative/","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"We can also compute the analytical solution:","category":"page"},{"location":"Derivative/arbitrary_order_derivative/","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"f(x)=fracGamma(6)Gamma(24)x^14","category":"page"},{"location":"Derivative/arbitrary_order_derivative/","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"Aftrer we plot the numerical and the analytical, we can see FractionalCalculus.jl obtain a high precision:","category":"page"},{"location":"Derivative/arbitrary_order_derivative/","page":"Arbitrary Order Fractional Derivative","title":"Arbitrary Order Fractional Derivative","text":"(Image: Arbitratry)","category":"page"},{"location":"Integral/symintegral/#Symbolic-Fractional-Integration","page":"Symbolic Fractional Integration","title":"Symbolic Fractional Integration","text":"","category":"section"},{"location":"Integral/symintegral/","page":"Symbolic Fractional Integration","title":"Symbolic Fractional Integration","text":"Similiar to symbolic fractional differentiation in FractionalCalculus.jl, we first define fractional integration rules to implement symbolic fractional integration computing.","category":"page"},{"location":"Integral/symintegral/","page":"Symbolic Fractional Integration","title":"Symbolic Fractional Integration","text":"All we have to do is to call the semiint function:","category":"page"},{"location":"Integral/symintegral/","page":"Symbolic Fractional Integration","title":"Symbolic Fractional Integration","text":"julia> semiint(x^2)\n0.6018022224509401(x^2.5)","category":"page"},{"location":"Derivative/short_memory_effect/#Short-Memory-Effect","page":"Short Memory Effect","title":"Short Memory Effect","text":"","category":"section"},{"location":"Derivative/short_memory_effect/","page":"Short Memory Effect","title":"Short Memory Effect","text":"In fractional derivative(also in the fractional integral), we already know the derivative of a fixed point depends on its history which is also called the Non-Local property. In Grunwald Letnikov sense, when we want to calculate the fractional derivative at a fixed point far away from its starting point, we can neglect its faraway lower terminal, and focus on its recent history instead.","category":"page"},{"location":"Derivative/short_memory_effect/","page":"Short Memory Effect","title":"Short Memory Effect","text":"Which means in the interval t-L t, L is the \"memory length\".","category":"page"},{"location":"Derivative/short_memory_effect/","page":"Short Memory Effect","title":"Short Memory Effect","text":"_aD^alpha_t f(t)approx _t-LD^alpha_t f(t)","category":"page"},{"location":"Derivative/short_memory_effect/","page":"Short Memory Effect","title":"Short Memory Effect","text":"By deploying the Short Memory Effect, we can reduce our numerical cost while retaining the precision in a way.","category":"page"},{"location":"Derivative/short_memory_effect/","page":"Short Memory Effect","title":"Short Memory Effect","text":"info: Short memory effect in FDE\nWant to see how short memory is used in fractional differential equations? Please see the short memory effect in FDE","category":"page"},{"location":"Integral/integral/#Fractional-integral","page":"Fractional integral","title":"Fractional integral","text":"","category":"section"},{"location":"Integral/integral/","page":"Fractional integral","title":"Fractional integral","text":"Pages = [\"integral.md\"]","category":"page"},{"location":"Integral/integral/#Riemann-Liouville-sense-integral","page":"Fractional integral","title":"Riemann Liouville sense integral","text":"","category":"section"},{"location":"Integral/integral/","page":"Fractional integral","title":"Fractional integral","text":"_aD_t^-alphaf(t)=frac1Gamma(alpha)int_a^t(t-tau)^alpha-1f(tau)dtau","category":"page"},{"location":"Integral/integral/","page":"Fractional integral","title":"Fractional integral","text":"In FractionalCalculus, you can compute the integral of a function with order alpha:","category":"page"},{"location":"Integral/integral/","page":"Fractional integral","title":"Fractional integral","text":"julia> fracint(x->x, 0.5, 0, 1, 0.0001, RLDirect())","category":"page"},{"location":"Integral/integral/","page":"Fractional integral","title":"Fractional integral","text":"A tuple contains the result and estimating error will be returned.","category":"page"},{"location":"Integral/integral/","page":"Fractional integral","title":"Fractional integral","text":"julia> fracint(x->x, 0.5, 0, 1, 0.0001, RLDirect())\n(0.7522527785271369, 8.022170098417246e-9)","category":"page"},{"location":"#FractionalCalculus.jl","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"","category":"section"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"Hello there👋!","category":"page"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"FractionalCalculus.jl is a Julia package aiming at providing support for computing fractional derivative and fractional integral.","category":"page"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"tip: Star Us\nIf you think FractionalCalculus.jl is useful, please star us on GitHub, it means a lot to us!","category":"page"},{"location":"#Installation","page":"FractionalCalculus.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"To install FractionalCalculus, please open Julia REPL and press] key to use package mode and then type the following command:","category":"page"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"pkg> add FractionalCalculus","category":"page"},{"location":"#Features","page":"FractionalCalculus.jl","title":"Features","text":"","category":"section"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"Feature-Rich. FractionalCalculus now has algorithms for Caputo fractional derivative, Grunwald-Letnikov fractional derivative, Riesz fractional derivative, Hadamard fractional derivative and Riemann-Liouville fractional integral support, more algorithms are planned to support to enrich the package ecosystem.\nEasy to Use. FractionalCalculus.jl is quite easy to use, with only a few API but equiped a lot algorithms.\nHigh performance. FractionalCalculus.jl is highly optimized for high performance. It is written in Julia and deployed many optimization techniques to improve the performance.\nSymbolic fractional differentiation and integration.","category":"page"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"tip: Fractional Differential Equations\nWant to solve fractional differential equations with performant and effcient algorithms? Please see FractionalDiffEq.jl","category":"page"},{"location":"#Plans","page":"FractionalCalculus.jl","title":"Plans","text":"","category":"section"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"Add more visualization of how the fraction derivative and integral are changing based on Makie or Javis or Manim\nAdd more algorithms\nAdd Pluto or Jupyter notebook based examples","category":"page"},{"location":"#Contributing","page":"FractionalCalculus.jl","title":"Contributing","text":"","category":"section"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"The development of FractionalCalculus.jl is on GitHub, please report bugs or send pull requests to help FractionalCalculus.jl grow.","category":"page"},{"location":"#Acknowledge","page":"FractionalCalculus.jl","title":"Acknowledge","text":"","category":"section"},{"location":"","page":"FractionalCalculus.jl","title":"FractionalCalculus.jl","text":"FractionalCalculus.jl is built upon the hard work of many scientific researchers, I sincerely appreciate what they have done to help the development of science and technology.","category":"page"},{"location":"Derivative/symderivative/#Symbolic-Fractional-Differentiation","page":"Symbolic Fractional Differentiation","title":"Symbolic Fractional Differentiation","text":"","category":"section"},{"location":"Derivative/symderivative/","page":"Symbolic Fractional Differentiation","title":"Symbolic Fractional Differentiation","text":"With the help of SymbolicUtils.jl and Symbolics.jl, FractionalCalculus.jl can compute symbolic fractional differentiation and integral now!","category":"page"},{"location":"Derivative/symderivative/","page":"Symbolic Fractional Differentiation","title":"Symbolic Fractional Differentiation","text":"First we need to import FractionalCalculus.jl and SymbolicUtils.jl to our workspace:","category":"page"},{"location":"Derivative/symderivative/","page":"Symbolic Fractional Differentiation","title":"Symbolic Fractional Differentiation","text":"julia> using FractionalCalculus, SymbolicUtils\njulia> @syms x","category":"page"},{"location":"Derivative/symderivative/","page":"Symbolic Fractional Differentiation","title":"Symbolic Fractional Differentiation","text":"Then, use semidiff function to compute symbolic fractional differentiation:","category":"page"},{"location":"Derivative/symderivative/","page":"Symbolic Fractional Differentiation","title":"Symbolic Fractional Differentiation","text":"julia> semidiff(log(x))\nlog(4x) / sqrt(πx)\n\njulia> semidiff(exp(x))\nexp(x)*SpecialFunctions.erf(sqrt(x)) + 1 / sqrt(πx)\n\njulia> semidiff(erf(x))\nexp(-0.5x)*SpecialFunctions.besseli(0, 0.5x)","category":"page"}]
}
